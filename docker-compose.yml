version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: ai-dashboard-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: ai-dashboard
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - ai-dashboard-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: ai-dashboard-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ai-dashboard-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ai-dashboard-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5005
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/ai-dashboard?authSource=admin
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      ALLOWED_ORIGINS: http://localhost:3000,http://localhost:3005
    ports:
      - "5005:5005"
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./backend/logs:/app/logs
    networks:
      - ai-dashboard-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5005/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ai-dashboard-frontend
    restart: unless-stopped
    environment:
      VITE_API_BASE_URL: http://localhost:5005
      VITE_APP_NAME: AI-Powered Dashboard
      VITE_APP_VERSION: 1.0.0
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - ai-dashboard-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: ai-dashboard-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - ai-dashboard-network

volumes:
  mongodb_data:
  redis_data:

networks:
  ai-dashboard-network:
    driver: bridge
